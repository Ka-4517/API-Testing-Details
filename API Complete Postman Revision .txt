API Complete Postman Revision 

Get started in Postman<<
1. Install and update Postman<
To get the latest version of the Postman desktop app, visit the Download Postman page and select the option for your operating system. 
Postman is available as a native desktop app for macOS (Intel or Apple silicon), Windows (Intel 32-bit or 64-bit), and Linux (64-bit).

2.Install Postman on Windows<
Download the latest Postman version.
Select and run the .exe file to install Postman.
Postman v9.4 is the last version of Postman that supports both 32-bit and 64-bit Windows.

3. Install In Mac 
Postman is available for macOS 10.13 (High Sierra) and later.
Download the latest Postman version.
Make sure to download the Mac Apple Chip version if you have a Mac with an Apple silicon processor.
If your browser downloads the file as a ZIP file, find the file in the Downloads folder and unzip it.
In the Downloads folder, double-click the Postman file to install it.
When prompted, move the file to your Applications folder. This will ensure that future updates can be installed.

4. Install Postman on Linux
Postman supports the following Linux distributions: Ubuntu 14.04 and later, Fedora 24, and Debian 8 and later.
Postman recommends installing using Snap because it includes all the libraries the app needs and they're bundled with the app itself.
>>Commands You will write when you try actual >> OK

5. Customize Postman settings
Contents:-
1.General:Use the settings on the General tab to configure how Postman sends requests or to customize the Postman user interface.
>Request<<<     (Important)
>>Trim keys and values in request body - Turn this on to trim parameters when sending requests with form data or url-encoded data.
>>SSL certificate verification - Turn this off to prevent Postman from checking the validity of SSL certificates when making requests.
>>Language detection - By default, Postman automatically detects the correct media type for the response body based on the Content-Type header. Select JSON to always use JSON rendering for the response body.
>>Request Timeout - Enter how long (in milliseconds) Postman will wait for a response before timing out. If you enter 0, Postman will wait for a response forever.
>>Max response size - Enter the largest response size (in megabytes) that Postman will download. For responses that exceed this limit, Postman asks if you want to increase the size limit or download the response. 
If you enter 0, Postman downloads responses of any size. Rendering large responses may affect Postman's performance.
>>Request validation - When this is turned on, Postman automatically validates requests in collections linked to an API. Postman compares requests to the API definition and alerts you to any inconsistencies. 
>>Show security warnings count - When this is turned on, Postman shows the number of security warnings that were found after sending a request. Security warnings are shown on the Security tab in the response.
>Working directory<<<
>>When you send a form-data or binary file with a request body, Postman saves a path to the test file as part of the collection. The file path is relative to your working directory. 
>>The working directory is also used by Newman. Store files you want to use with Newman in the working directory path saved in the collection.
>Headers<<<       (Important)
>>Send no-cache header -  (Recommended) Turn this on to send a Cache-Control: no-cache header with each request. The no-cache directive forces the server to revalidate each request and ensures you get an up-to-date (not stale) response.
>>Send Postman Token header -  (Recommended) Turn this on to send a random Postman token with an XMLHttpRequest. Sending a random token ensures the receiving server handles one request at a time, even when the requests send with the same parameters. 
The token can also aid debugging and help you distinguish between requests on the server side.
>>Retain headers when clicking on links - When you select a link in a response, Postman creates a new GET request with the link URL. Turn this on to keep the headers from the earlier request in the new request. 
Retaining headers is useful if you mainly access protected resources.
>>Automatically follow redirects - Turn this off to prevent requests that return a 3xx series response from automatically redirecting.
>User interface<<<
>>Remove tabs - (Postman web app) Use tabs in your browser to navigate Postman instead of in-app tabs. For more information, see Browser tabs in the Postman web app.
>>Always open sidebar item in new tab - By default, when you select a sidebar item, Postman opens it in the preview tab. Turn this on to always open sidebar items in a new tab.
>>Always ask when closing unsaved tabs - By default, Postman asks if you want to save any unsaved changes when closing a tab. Turn this off to always discard unsaved changes when closing a tab.
>>Two-pane view - By default, Postman displays responses below requests. Turn this on to display the response and request panes side by side.
>>Show icons with tab names - Turn this off to hide the icons that appear next to tab names.
>>Variable autocomplete - Turn this on to enable autocomplete when typing variable names.
>>Default documentation editor - Select the default editor you want to use for editing documentation descriptions in Postman (Postman editor or Markdown editor).
>Editor settings<<<
>>Font family - Enter one or more font family names separated by commas. Postman uses the first available font family to display code text.
>>Font size - Enter the font size in pixels to use for code text.
>>Indentation count - Enter the number of indentation characters to use for each code level.
>>Indentation type - Select the indentation character type to use (Space or Tab).
>>Auto close brackets - Turn this on to automatically add a closing bracket when you enter an opening bracket.
>>Auto close quotes - Turn this on to automatically add a closing quotation mark when you enter an opening quotation mark.
>Application<<<
>>Language - Select your preferred language for the Postman app and email notifications.
>>Autosave - Turn this on to automatically save your changes to collections, requests, and environments. Turn this off to manually save your changes.
>>Send anonymous usage data to Postman - Postman gathers basic, anonymous usage data to help with product improvement. Turn this off to stop sending anonymous usage data to Postman.
>>Connection mode - Configure how to connect to Postman servers using either Auto (default) or HTTP.

2.Themes:Select a Light or Dark theme for Postman. You can also select System Default, which syncs your Postman theme to your operating system settings.

3.Shortcit Key : In This there are so many short cut key combination to perform some basic operations.

4. Data : Use the Data tab to request a bulk export of Postman data or to import data. To begin the export process, select Export Data. You can choose to export your collections, environments, or both. 
You'll receive an email when your dump file is ready to download.

5. Add-ons : Select Download Newman from npm to download Newman, Postman's command line companion. Newman integrates your Postman collections with your build system and runs automated API tests. 

6. Certificates : Use the Certificates tab to add and manage CA certificates and client certificates in Postman.

7. Connected accounts : It is used to add Github & other SOS Id.

8. Proxy : Use the Proxy tab to configure proxy settings for connecting to online services and sending API requests.


6. Configure Postman to use a proxy server        (Important)
