What are the Different type of Assertions Used in Postman API Testing ?      <--------Api Assertion 

1.Status Code Assertion:-
Purpose: Validates that the HTTP status code returned by the API matches the expected status code.
Example:
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

2.Response Time Assertion:
Purpose: Verifies that the response time of the API call falls within an acceptable range.
Example:
pm.test("Response time is less than 200ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(200);
});
3.JSON Schema Validation Assertion:
Purpose: Ensures that the response body conforms to a specified JSON schema.
Example:
pm.test("Response body has a valid schema", function () {
    pm.response.to.have.jsonSchema(your_json_schema);
});
4.Response Body Content Assertion:
Purpose: Checks specific values or properties within the response body.
Example:
pm.test("Response body contains expected data", function () {
    pm.expect(pm.response.text()).to.include("expected_value");
});

5.Headers Assertion:
Purpose: Verifies the presence and values of specific headers in the API response.
Example:
pm.test("Content-Type header is present", function () {
    pm.response.to.have.header("Content-Type");
});
6.Cookie Assertion:
Purpose: Checks the presence and values of cookies in the response.
Example:
pm.test("Cookie 'session_id' is present", function () {
    pm.response.to.have.cookie("session_id");
});

7.Response Time Assertion:
Purpose: Validates that the API response is received within a specified time frame.
Example:
pm.test("Response time is less than 500ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(500);
});
8.Custom JavaScript Assertion:
Purpose: Allows you to write custom JavaScript code to perform specific validations.
Example:
pm.test("Custom assertion", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.property).to.eql("expected_value");
});
